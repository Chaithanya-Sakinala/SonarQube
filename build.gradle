plugins {
    id "jacoco"
    id "java"
    id "application"
  id "org.sonarqube" version "4.4.1.3373"
}

description = 'Example of SonarScanner for Gradle Usage'
version = '1.0'


sonar {
  properties {
    property "sonar.projectKey", "Chaithanya-Sakinala_SonarQube"
    property "sonar.organization", "chaithanya-sakinala"
    property "sonar.host.url", "https://sonarcloud.io"
        property("sonar.sources", "src/main")
    property "sonar.tests", "src/test"
  }
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:31.1-jre'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    sourceSets.main.java.srcDirs = ['src']
}

application {
    // Define the main class for the application.
    mainClass='com.acme.App'
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}


// Define custom task to download SonarQube analysis report
task downloadSonarQubeReport(type: Exec) {
    group = 'reporting'
    description = 'Downloads the SonarQube analysis report'

    // Customize the command according to your SonarQube setup
    commandLine './gradlew', 'sonarqube', '-Dsonar.login=8498f0c9772de28e6b5ceb35f4a9f147ba5602e5', '-Dsonar.projectKey=Chaithanya-Sakinala_SonarQube', '-Dsonar.organization=chaithanya-sakinala', '-Dsonar.analysis.mode=publish', '-Dsonar.report.export.path=sonar-report.json'
}

// Define dependencies for the custom task
downloadSonarQubeReport.dependsOn('sonarqube')



